using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;

public partial class COMMON_frmKYCReport : System.Web.UI.Page
{
    clsSystemAdmin objSysAdmin = new clsSystemAdmin();
    private static string strUserName = string.Empty;
    private static string strPassword = string.Empty;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            try
            {
                strUserName = Session["UserLoginName"].ToString();
                strPassword = Session["Password"].ToString();
            }
            catch
            {
                Session.Clear();
                Response.Redirect("../frmSeesionExpMesage.aspx");
            }
        }
        // Start - Check active session
        try
        {
            string sess_id = HttpContext.Current.Session.SessionID;
            string strSessID = objSysAdmin.GetActiveSess(sess_id, Session["UserID"].ToString());

            if (strSessID == Session["Sess_ID"].ToString())
            {
                Session.Timeout = Convert.ToInt32(Session["SessionOut"].ToString());
            }
            else
            {
                Response.Redirect("../frmSeesionExpMesage.aspx");
            }
        }
        catch (Exception ex)
        {
            ex.Message.ToString();
            Response.Redirect("../frmSeesionExpMesage.aspx");
        }
        // End - Check active session
    }
    protected void btnReport_Click(object sender, EventArgs e)
    {
        string strSql = "";
        try
        {
            string strAcntMsindn = "+88" + txtWalletID.Text.Substring(0, txtWalletID.Text.Length - 1);
            //strSql = " SELECT CL.CLINT_NAME,CL.CLINT_MOBILE,CL.CLINT_FATHER_NAME,CL.CLINT_MOTHER_NAME ,CL.CLIENT_DOB,CL.OCCUPATION,CL.WORK_EDU_BUSINESS,CL.PUR_OF_TRAN,"
            //      + " CL.CLIENT_OFFIC_ADDRESS,CL.CLINT_ADDRESS1 PRESENT_ADDRESS,CL.CLINT_ADDRESS2 PERMANET_ADDRESS,BA.BANK_NAME,BA.BANK_BR_NAME,BA.BANK_ACCNT_NO,"
            //      + " IDS.IDNTIFCTION_NAME,CI.CLINT_IDENT_NAME,IINF.INTRODCR_NAME,IINF.INTRODCR_MOBILE,IINF.INTRODCR_ADDRESS,IINF.INTRODCR_OCCUPATION,NI.NOMNE_NAME,"
            //      + " NI.NOMNE_MOBILE,NI.RELATION,NI.PERCENTAGE"
            //      + " FROM CLIENT_LIST CL,ACCOUNT_LIST AL,BANK_ACCOUNT BA,CLIENT_IDENTIFICATION CI,IDENTIFICATION_SETUP IDS,INTRODUCER_INFO IINF,NOMINEE_INFO NI"
            //      + " WHERE  AL.CLINT_ID=CL.CLINT_ID AND CL.CLINT_ID=BA.CLIENT_ID(+) AND CL.CLINT_ID=CI.CLIENT_ID(+) AND CI.IDNTIFCTION_ID=IDS.IDNTIFCTION_ID(+) AND CL.CLINT_ID=IINF.CLIENT_ID(+)"
            //      + " AND CL.CLINT_ID=NI.NOMNE_ID(+)  AND AL.ACCNT_NO='" + txtWalletID.Text.ToString() + "'";

            //strSql = "  SELECT DISTINCT ASD.SERIAL_NO,SP.SERVICE_PKG_NAME,CL.CLINT_NAME,CL.HUSBAND_NAME,CL.CLINT_MOBILE,CL.CLINT_FATHER_NAME,CL.CLINT_MOTHER_NAME ,CL.CLIENT_DOB,CL.OCCUPATION,CL.WORK_EDU_BUSINESS,CL.PUR_OF_TRAN,"
            //       + " CL.CLIENT_OFFIC_ADDRESS,CL.CLINT_ADDRESS1 PRESENT_ADDRESS,CL.CLINT_ADDRESS2 PERMANET_ADDRESS,CL.THANA_ID,BA.BANK_NAME,BA.BANK_BR_NAME, BA.BANK_ACCNT_NO,"
            //       + " IDS.IDNTIFCTION_NAME,CI.CLINT_IDENT_NAME,IINF.INTRODCR_NAME,IINF.INTRODCR_MOBILE,IINF.INTRODCR_ADDRESS,IINF.INTRODCR_OCCUPATION,NI.NOMNE_NAME, NI.NOMNE_MOBILE,NI.RELATION,NI.PERCENTAGE,"
            //       + " ASD.CUSTOMER_MOBILE_NO,ASD.AGENT_MOBILE_NO,MTC.THANA_ID , MTC.THANA_NAME AS ClientThana,MTC.DISTRICT_ID,MDC.DISTRICT_ID,MDC.DISTRICT_NAME AS ClientDisName,"
            //       + " ALS.ACCNT_MSISDN ,ALS.CLINT_ID AS AClientID,CLS.CLINT_ID AS AClientID, CLS.CLINT_NAME AS AName,CLS.THANA_ID,MT.THANA_ID, MT.THANA_NAME AS AgentThanaName,MT.DISTRICT_ID,"
            //       + " MD.DISTRICT_ID,MD.DISTRICT_NAME AS AgentDisNAme"
            //       + " FROM CLIENT_LIST CL,ACCOUNT_LIST AL,BANK_ACCOUNT BA,CLIENT_IDENTIFICATION CI,IDENTIFICATION_SETUP IDS,INTRODUCER_INFO IINF,NOMINEE_INFO NI,"
            //       + " ACCOUNT_SERIAL_DETAIL ASD,MANAGE_THANA MTC,MANAGE_DISTRICT MDC ,ACCOUNT_LIST ALS ,CLIENT_LIST CLS,MANAGE_THANA MT ,MANAGE_DISTRICT MD,SERVICE_PACKAGE SP "
            //       + " WHERE  AL.CLINT_ID=CL.CLINT_ID AND CL.CLINT_ID=BA.CLIENT_ID(+) AND CL.CLINT_ID=CI.CLIENT_ID(+) AND CI.IDNTIFCTION_ID=IDS.IDNTIFCTION_ID(+) AND CL.CLINT_ID=IINF.CLIENT_ID(+)"
            //       + " AND CL.CLINT_ID=NI.CLIENT_ID(+)   AND CL.CLINT_MOBILE=ASD.CUSTOMER_MOBILE_NO(+) AND  CL.THANA_ID=MTC.THANA_ID(+)"
            //       + " AND  MTC.DISTRICT_ID=MDC.DISTRICT_ID(+) AND ASD.AGENT_MOBILE_NO=ALS.ACCNT_MSISDN(+) AND ALS.CLINT_ID=CLS.CLINT_ID(+)"
            //       + " AND CLS.THANA_ID=MT.THANA_ID(+) AND MT.DISTRICT_ID=MD.DISTRICT_ID(+) AND AL.SERVICE_PKG_ID=SP.SERVICE_PKG_ID"
            //       + "  AND AL.ACCNT_NO='" + txtWalletID.Text.ToString() + "'";


            //strSql = " SELECT DISTINCT ASD.SERIAL_NO, SP.SERVICE_PKG_NAME, CL.CLINT_NAME, CL.HUSBAND_NAME,  "
            //        + " CL.CLINT_MOBILE, CL.CLINT_FATHER_NAME, CL.CLINT_MOTHER_NAME, CL.CLIENT_DOB, CL.OCCUPATION, "
            //        + " CL.WORK_EDU_BUSINESS, CL.PUR_OF_TRAN, CL.CLIENT_OFFIC_ADDRESS, CL.CLINT_ADDRESS1 PRESENT_ADDRESS, "
            //        + " CL.CLINT_ADDRESS2 PERMANET_ADDRESS,  CL.THANA_ID, BA.BANK_NAME, BA.BANK_BR_NAME, BA.BANK_ACCNT_NO, BA.REMARKS, "
            //        + " IDS.IDNTIFCTION_NAME, CI.CLINT_IDENT_NAME, IINF.INTRODCR_NAME, IINF.INTRODCR_MOBILE, "
            //        + " IINF.INTRODCR_ADDRESS, IINF.INTRODCR_OCCUPATION, NI.NOMNE_NAME, NI.NOMNE_MOBILE, NI.RELATION, "
            //        + " NI.PERCENTAGE, ASD.CUSTOMER_MOBILE_NO, ASD.AGENT_MOBILE_NO, MTC.THANA_ID, "
            //        + " MTC.THANA_NAME AS ClientThana, MTC.DISTRICT_ID, MDC.DISTRICT_ID, MDC.DISTRICT_NAME AS ClientDisName, "
            //        + " ALS.ACCNT_MSISDN, ALS.CLINT_ID AS AClientID, CLS.CLINT_ID AS AClientID, CLS.CLINT_NAME AS AName, "
            //        + " CLS.THANA_ID, MT.THANA_ID, MT.THANA_NAME AS AgentThanaName, MT.DISTRICT_ID, MD.DISTRICT_ID, "
            //        + " MD.DISTRICT_NAME AS AgentDisNAme, CBB.BRANCH_NAME BANK_BRANCH_NAME FROM   CLIENT_LIST CL, "
            //        + " ACCOUNT_LIST AL, BANK_ACCOUNT BA, CLIENT_IDENTIFICATION CI, IDENTIFICATION_SETUP IDS, INTRODUCER_INFO IINF, "
            //        + " NOMINEE_INFO NI, ACCOUNT_SERIAL_DETAIL ASD, MANAGE_THANA MTC, MANAGE_DISTRICT MDC, ACCOUNT_LIST ALS, "
            //        + " CLIENT_LIST CLS, MANAGE_THANA MT, MANAGE_DISTRICT MD, SERVICE_PACKAGE SP, CM_BANK_BRANCH CBB "
            //        + " WHERE AL.CLINT_ID = CL.CLINT_ID AND CL.CLINT_ID = BA.CLIENT_ID(+) AND CL.CLINT_ID = CI.CLIENT_ID(+) "
            //        + " AND CI.IDNTIFCTION_ID = IDS.IDNTIFCTION_ID(+) AND CL.CLINT_ID = IINF.CLIENT_ID(+) AND CL.CLINT_ID = NI.CLIENT_ID(+) "
            //        + " AND CL.CLINT_MOBILE = ASD.CUSTOMER_MOBILE_NO(+) AND CL.THANA_ID = MTC.THANA_ID(+) AND MTC.DISTRICT_ID = MDC.DISTRICT_ID(+) "
            //        + " AND ASD.AGENT_MOBILE_NO = ALS.ACCNT_MSISDN(+) AND ALS.CLINT_ID = CLS.CLINT_ID(+) AND CLS.THANA_ID = MT.THANA_ID(+) "
            //        + " AND MT.DISTRICT_ID = MD.DISTRICT_ID(+) AND AL.SERVICE_PKG_ID = SP.SERVICE_PKG_ID AND AL.ACCNT_NO='" + txtWalletID.Text.ToString() + "'"
            //        + " AND ASD.BANK_BRANCH_ID = CBB.BANK_BRNCH_ID(+) ";

     //strSql = "SELECT DISTINCT ASD.SERIAL_NO,SP.SERVICE_PKG_NAME,CL.CLINT_ID,"
     //        + "CASE WHEN(CL.CLINT_NAME is null OR CL.CLINT_NAME = '' OR CL.CLINT_NAME LIKE '+8801%') THEN dki.CLINT_NAME ELSE CL.CLINT_NAME END CLINT_NAME,"
     //        + "CASE WHEN(CL.HUSBAND_NAME is null OR CL.HUSBAND_NAME = '') THEN '' ELSE CL.HUSBAND_NAME END HUSBAND_NAME,"
     //        + "CASE WHEN(CL.CLINT_MOBILE is null OR CL.CLINT_MOBILE = '') THEN dki.CLINT_MOBILE ELSE CL.CLINT_MOBILE END CLINT_MOBILE,"
     //        + "CASE WHEN(CL.CLINT_FATHER_NAME is null OR CL.CLINT_FATHER_NAME = '') THEN to_char(dki.CLINT_FATHER_NAME) ELSE CL.CLINT_FATHER_NAME END CLINT_FATHER_NAME,"
     //        + "CASE WHEN(CL.CLINT_MOTHER_NAME is null OR CL.CLINT_MOTHER_NAME = '') THEN to_char(dki.CLINT_MOTHER_NAME) ELSE CL.CLINT_MOTHER_NAME END CLINT_MOTHER_NAME,"
     //        + "CASE WHEN(CL.CLIENT_DOB is null OR CL.CLIENT_DOB = '') THEN dki.CLIENT_DOB ELSE CL.CLIENT_DOB END CLIENT_DOB,"
     //        + "CASE WHEN(CL.OCCUPATION is null OR CL.OCCUPATION = '') THEN dki.OCCUPATION_ID ELSE CL.OCCUPATION END OCCUPATION,"
     //        + "CASE WHEN(CL.WORK_EDU_BUSINESS is null OR CL.WORK_EDU_BUSINESS = '') THEN '' ELSE CL.WORK_EDU_BUSINESS END WORK_EDU_BUSINESS,"
     //        + "CASE WHEN(CL.PUR_OF_TRAN is null OR CL.PUR_OF_TRAN = '') THEN '' ELSE CL.PUR_OF_TRAN END PUR_OF_TRAN,"
     //        + "CASE WHEN(CL.CLIENT_OFFIC_ADDRESS is null OR CL.CLIENT_OFFIC_ADDRESS = '') THEN '' ELSE CL.CLIENT_OFFIC_ADDRESS END CLIENT_OFFIC_ADDRESS,"
     //        + "CASE WHEN(CL.CLINT_ADDRESS1 is null OR CL.CLINT_ADDRESS1 = '') THEN dki.CLIENT_PRE_ADDRESS ELSE CL.CLINT_ADDRESS1 END PRESENT_ADDRESS,"
     //        + "CASE WHEN(CL.CLINT_ADDRESS2 is null OR CL.CLINT_ADDRESS2 = '') THEN dki.CLIENT_PER_ADDRESS ELSE CL.CLINT_ADDRESS2 END PERMANET_ADDRESS,"
     //        + "CASE WHEN(CL.THANA_ID is null OR CL.THANA_ID = '') THEN dki.CLIENT_PRE_THANA_ID ELSE CL.THANA_ID END THANA_ID,"
     //        + "CASE WHEN(NI.NOMNE_NAME is null OR NI.NOMNE_NAME = '') THEN to_char(dki.NOMINEE_NAME) ELSE NI.NOMNE_NAME END NOMINEE_NAME,"
     //        + "CASE WHEN(NI.RELATION is null OR NI.RELATION = '') THEN R.RELATIONSHIP_TITLE ELSE NI.RELATION END RELATION,"
     //        + "CASE WHEN(NI.PERCENTAGE is null OR NI.PERCENTAGE = '') THEN dki.NOMINEE_PERCENTAGE ELSE NI.PERCENTAGE END PERCENTAGE,"
     //        + "CASE WHEN(dki.CLINT_MOBILE is null OR dki.CLINT_MOBILE = '') THEN 'N' ELSE 'Y' END IsEKYC, "
     //        + "ASD.CUSTOMER_MOBILE_NO, ASD.AGENT_MOBILE_NO, BA.BANK_NAME, BA.BANK_BR_NAME, BA.BANK_ACCNT_NO, BA.REMARKS,CI.CLINT_IDENT_NAME,IDS.IDNTIFCTION_NAME,"
     //        + "IINF.INTRODCR_NAME, IINF.INTRODCR_MOBILE,IINF.INTRODCR_ADDRESS, IINF.INTRODCR_OCCUPATION,"
     //        + "MTC.THANA_ID,  MTC.THANA_NAME AS ClientThana, MTC.DISTRICT_ID, MDC.DISTRICT_ID, MDC.DISTRICT_NAME AS ClientDisName,"
     //        + "CLS.CLINT_ID AS AClientID, CLS.CLINT_NAME AS AName, CLS.THANA_ID,MT.THANA_ID, MT.THANA_NAME AS AgentThanaName, MT.DISTRICT_ID,MD.DISTRICT_ID,  "
     //        + "MD.DISTRICT_NAME AS AgentDisNAme,CBB.BRANCH_NAME BANK_BRANCH_NAME FROM ACCOUNT_LIST AL "
     //        + "LEFT JOIN CLIENT_LIST CL on CL.CLINT_ID = AL.CLINT_ID "
     //        + "LEFT JOIN DIGITAL_KYC_INFO dki on dki.CLINT_MOBILE = substr(AL.ACCNT_NO, 1, 11) "
     //        + "LEFT JOIN ACCOUNT_SERIAL_DETAIL ASD on ASD.CUSTOMER_MOBILE_NO = AL.ACCNT_MSISDN "
     //        + "LEFT JOIN SERVICE_PACKAGE SP on SP.SERVICE_PKG_ID = AL.SERVICE_PKG_ID "
     //        + "LEFT JOIN BANK_ACCOUNT BA on BA.CLIENT_ID = CL.CLINT_ID "
     //        + "LEFT JOIN CLIENT_IDENTIFICATION CI on CI.CLIENT_ID = CL.CLINT_ID "
     //        + "LEFT JOIN IDENTIFICATION_SETUP IDS on IDS.IDNTIFCTION_ID = CI.IDNTIFCTION_ID "
     //        + "LEFT JOIN INTRODUCER_INFO IINF on IINF.CLIENT_ID = CL.CLINT_ID "
     //        + "LEFT JOIN NOMINEE_INFO NI on NI.CLIENT_ID = CL.CLINT_ID "
     //        + "LEFT JOIN RELATIONSHIP R on R.RELATIONSHIP_ID = dki.RELATIONSHIP_ID "
     //        + "LEFT JOIN MANAGE_THANA MTC on MTC.THANA_ID = CL.THANA_ID "
     //        + "LEFT JOIN MANAGE_DISTRICT MDC on MDC.DISTRICT_ID = MTC.DISTRICT_ID "
     //        + "LEFT JOIN ACCOUNT_LIST ALS on ALS.ACCNT_MSISDN = ASD.AGENT_MOBILE_NO "
     //        + "LEFT JOIN CLIENT_LIST CLS on CLS.CLINT_ID = ALS.CLINT_ID "
     //        + "LEFT JOIN MANAGE_THANA MT on MT.THANA_ID = CLS.THANA_ID "
     //        + "LEFT JOIN MANAGE_DISTRICT MD on MD.DISTRICT_ID = MT.DISTRICT_ID "
     //        + "LEFT JOIN CM_BANK_BRANCH CBB on CBB.BANK_BRNCH_ID = ASD.BANK_BRANCH_ID "
     //        + "where AL.ACCNT_NO='" + txtWalletID.Text.ToString() + "' AND ROWNUM = 1";

            strSql = "SELECT DISTINCT ASD.SERIAL_NO,SP.SERVICE_PKG_NAME,CL.CLINT_ID,"
             + "CASE WHEN(CL.CLINT_NAME is null OR CL.CLINT_NAME = '' OR CL.CLINT_NAME LIKE '+8801%') THEN dki.CLINT_NAME ELSE CL.CLINT_NAME END CLINT_NAME,"
             + "CASE WHEN(CL.HUSBAND_NAME is null OR CL.HUSBAND_NAME = '') THEN '' ELSE CL.HUSBAND_NAME END HUSBAND_NAME,"
             + "CASE WHEN(CL.CLINT_MOBILE is null OR CL.CLINT_MOBILE = '') THEN dki.CLINT_MOBILE ELSE CL.CLINT_MOBILE END CLINT_MOBILE,"
             + "CASE WHEN(CL.CLINT_FATHER_NAME is null OR CL.CLINT_FATHER_NAME = '') THEN to_char(dki.CLINT_FATHER_NAME) ELSE CL.CLINT_FATHER_NAME END CLINT_FATHER_NAME,"
             + "CASE WHEN(CL.CLINT_MOTHER_NAME is null OR CL.CLINT_MOTHER_NAME = '') THEN to_char(dki.CLINT_MOTHER_NAME) ELSE CL.CLINT_MOTHER_NAME END CLINT_MOTHER_NAME,"
             + "CASE WHEN(CL.CLIENT_DOB is null OR CL.CLIENT_DOB = '') THEN dki.CLIENT_DOB ELSE CL.CLIENT_DOB END CLIENT_DOB,"
             + "CASE WHEN(CL.OCCUPATION is null OR CL.OCCUPATION = '') THEN dki.OCCUPATION_ID ELSE CL.OCCUPATION END OCCUPATION,"
             + "CASE WHEN(CL.WORK_EDU_BUSINESS is null OR CL.WORK_EDU_BUSINESS = '') THEN '' ELSE CL.WORK_EDU_BUSINESS END WORK_EDU_BUSINESS,"
             + "CASE WHEN(CL.PUR_OF_TRAN is null OR CL.PUR_OF_TRAN = '') THEN '' ELSE CL.PUR_OF_TRAN END PUR_OF_TRAN,"
             + "CASE WHEN(CL.CLIENT_OFFIC_ADDRESS is null OR CL.CLIENT_OFFIC_ADDRESS = '') THEN '' ELSE CL.CLIENT_OFFIC_ADDRESS END CLIENT_OFFIC_ADDRESS,"
             + "CASE WHEN(CL.CLINT_ADDRESS1 is null OR CL.CLINT_ADDRESS1 = '') THEN dki.CLIENT_PRE_ADDRESS ELSE CL.CLINT_ADDRESS1 END PRESENT_ADDRESS,"
             + "CASE WHEN(CL.CLINT_ADDRESS2 is null OR CL.CLINT_ADDRESS2 = '') THEN dki.CLIENT_PER_ADDRESS ELSE CL.CLINT_ADDRESS2 END PERMANET_ADDRESS,"
             + "CASE WHEN(CL.THANA_ID is null OR CL.THANA_ID = '') THEN dki.CLIENT_PRE_THANA_ID ELSE CL.THANA_ID END THANA_ID,"
             + "CASE WHEN(NI.NOMNE_NAME is null OR NI.NOMNE_NAME = '') THEN to_char(dki.NOMINEE_NAME) ELSE NI.NOMNE_NAME END NOMNE_NAME,NI.NOMNE_MOBILE,"
             + "CASE WHEN(NI.RELATION is null OR NI.RELATION = '') THEN R.RELATIONSHIP_TITLE ELSE NI.RELATION END RELATION,"
             + "CASE WHEN(NI.PERCENTAGE is null OR NI.PERCENTAGE = '') THEN dki.NOMINEE_PERCENTAGE ELSE NI.PERCENTAGE END PERCENTAGE,"
             + "CASE WHEN(dki.CLINT_MOBILE is null OR dki.CLINT_MOBILE = '') THEN 'N' ELSE 'Y' END IsEKYC, "
             + "ASD.CUSTOMER_MOBILE_NO, ASD.AGENT_MOBILE_NO, BA.BANK_NAME, BA.BANK_BR_NAME, BA.BANK_ACCNT_NO, BA.REMARKS,CI.CLINT_IDENT_NAME,IDS.IDNTIFCTION_NAME,"
             + "IINF.INTRODCR_NAME, IINF.INTRODCR_MOBILE,IINF.INTRODCR_ADDRESS, IINF.INTRODCR_OCCUPATION,"
             + "MTC.THANA_ID,  MTC.THANA_NAME AS ClientThana, MTC.DISTRICT_ID, MDC.DISTRICT_ID, MDC.DISTRICT_NAME AS ClientDisName,"
             + "CLS.CLINT_ID AS AClientID, CLS.CLINT_NAME AS AName, CLS.THANA_ID,MT.THANA_ID, MT.THANA_NAME AS AgentThanaName, MT.DISTRICT_ID,MD.DISTRICT_ID,  "
             + "MD.DISTRICT_NAME AS AgentDisNAme,CBB.BRANCH_NAME BANK_BRANCH_NAME FROM ACCOUNT_LIST AL "
             + "LEFT JOIN CLIENT_LIST CL on CL.CLINT_ID = AL.CLINT_ID "
             + "LEFT JOIN DIGITAL_KYC_INFO dki on dki.CLINT_MOBILE = substr(AL.ACCNT_NO, 1, 11) "
             + "LEFT JOIN ACCOUNT_SERIAL_DETAIL ASD on ASD.CUSTOMER_MOBILE_NO = AL.ACCNT_MSISDN "
             + "LEFT JOIN SERVICE_PACKAGE SP on SP.SERVICE_PKG_ID = AL.SERVICE_PKG_ID "
             + "LEFT JOIN BANK_ACCOUNT BA on BA.CLIENT_ID = CL.CLINT_ID "
             + "LEFT JOIN CLIENT_IDENTIFICATION CI on CI.CLIENT_ID = CL.CLINT_ID "
             + "LEFT JOIN IDENTIFICATION_SETUP IDS on IDS.IDNTIFCTION_ID = CI.IDNTIFCTION_ID "
             + "LEFT JOIN INTRODUCER_INFO IINF on IINF.CLIENT_ID = CL.CLINT_ID "
             + "LEFT JOIN NOMINEE_INFO NI on NI.CLIENT_ID = CL.CLINT_ID "
             + "LEFT JOIN RELATIONSHIP R on R.RELATIONSHIP_ID = dki.RELATIONSHIP_ID "
             + "LEFT JOIN MANAGE_THANA MTC on MTC.THANA_ID = CL.THANA_ID "
             + "LEFT JOIN MANAGE_DISTRICT MDC on MDC.DISTRICT_ID = MTC.DISTRICT_ID "
             + "LEFT JOIN ACCOUNT_LIST ALS on ALS.ACCNT_MSISDN = ASD.AGENT_MOBILE_NO "
             + "LEFT JOIN CLIENT_LIST CLS on CLS.CLINT_ID = ALS.CLINT_ID "
             + "LEFT JOIN MANAGE_THANA MT on MT.THANA_ID = CLS.THANA_ID "
             + "LEFT JOIN MANAGE_DISTRICT MD on MD.DISTRICT_ID = MT.DISTRICT_ID "
             + "LEFT JOIN CM_BANK_BRANCH CBB on CBB.BANK_BRNCH_ID = ASD.BANK_BRANCH_ID "
             + "where AL.ACCNT_NO='" + txtWalletID.Text.ToString() + "' AND ROWNUM = 1";


            Session["ReportSQL"] = strSql;
            Session["RequestForm"] = "../COMMON/frmKYCReport.aspx";
            Session["ReportFile"] = "../COMMON/crptKYCReport.rpt";
            SaveAuditInfo("View", "KYC Report");
            Response.Redirect("../COM/COM_ReportView.aspx");
        }
        catch (Exception ex)
        {
            ex.Message.ToString();
        }
    }
    protected void SaveAuditInfo(string strOperationType, string strRemarks)
    {
        string IPAddress = Request.ServerVariables["remote_addr"];
        string Technology = Request.Browser.Browser + Request.Browser.Version;
        string IPTechnology = IPAddress + "-" + Technology;
        objSysAdmin.AddAuditLog(Session["UserID"].ToString(), strOperationType, IPTechnology, objSysAdmin.GetCurrentPageName(), strRemarks);
    }
}
